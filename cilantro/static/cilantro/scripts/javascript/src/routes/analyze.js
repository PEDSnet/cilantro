// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['environ', 'jquery', 'underscore', 'backbone', 'views/charts'], function(environ, $, _, Backbone, Charts) {
  var AnalysisArea;
  AnalysisArea = (function(_super) {

    __extends(AnalysisArea, _super);

    function AnalysisArea() {
      return AnalysisArea.__super__.constructor.apply(this, arguments);
    }

    AnalysisArea.prototype.id = '#analysis-area';

    AnalysisArea.prototype.initialize = function() {
      var $addChart,
        _this = this;
      this.charts = [];
      this.$toolbar = $('<ul>').addClass('nav pull-right').hide().appendTo('#subnav .container-fluid');
      this.$el.hide().appendTo('#main-area .inner').addClass('row-fluid').sortable({
        items: '> .area-container',
        handle: '.heading',
        update: function(event, ui) {
          var charts, idx, view, _i, _len, _ref, _results;
          charts = _this.$el.children('.chart-container');
          _ref = _this.charts;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            view = _ref[_i];
            idx = charts.index(view.el);
            _results.push(view.model.set({
              order: idx
            }));
          }
          return _results;
        }
      });
      $addChart = $('<button>').addClass('btn').append('<i>').find('i').addClass('icon-signal').end().on('click', function(event) {
        return _this.addChart();
      });
      this.$toolbar.append($addChart);
      return App.Distribution.each(function(model) {
        return _this.addChart(model);
      });
    };

    AnalysisArea.prototype.load = function() {
      var view, _i, _len, _ref;
      this.$el.fadeIn(100);
      this.$toolbar.fadeIn(100);
      if (!this.loaded) {
        _ref = this.charts;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          view = _ref[_i];
          view.updateChart();
        }
        return this.loaded = true;
      }
    };

    AnalysisArea.prototype.unload = function() {
      this.$el.hide();
      return this.$toolbar.hide();
    };

    AnalysisArea.prototype.addChart = function(attrs) {
      var model, view;
      if (!attrs instanceof App.Distribution.model) {
        model = attrs;
      } else {
        model = App.Distribution.create(attrs);
      }
      view = new Charts.Distribution({
        model: model,
        collection: App.DataField
      });
      this.charts.push(view);
      this.$el.append(view.$el);
      if (this.loaded) {
        return view.updateChart();
      }
    };

    return AnalysisArea;

  })(Backbone.View);
  return App.register('analyze/', 'analyze', new AnalysisArea);
});
