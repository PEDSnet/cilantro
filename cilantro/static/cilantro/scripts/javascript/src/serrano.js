// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  define(['use!underscore', 'use!backbone'], function(_, Backbone) {
    var DataConcepts, DataContext, DataContexts, DataField, DataFields, Distribution, Distributions;
    Distribution = (function(_super) {

      __extends(Distribution, _super);

      Distribution.name = 'Distribution';

      function Distribution() {
        return Distribution.__super__.constructor.apply(this, arguments);
      }

      return Distribution;

    })(Backbone.Model);
    Distributions = (function(_super) {

      __extends(Distributions, _super);

      Distributions.name = 'Distributions';

      function Distributions() {
        return Distributions.__super__.constructor.apply(this, arguments);
      }

      Distributions.prototype.model = Distribution;

      return Distributions;

    })(Backbone.Collection);
    DataField = (function(_super) {

      __extends(DataField, _super);

      DataField.name = 'DataField';

      function DataField() {
        return DataField.__super__.constructor.apply(this, arguments);
      }

      return DataField;

    })(Backbone.Model);
    DataFields = (function(_super) {

      __extends(DataFields, _super);

      DataFields.name = 'DataFields';

      function DataFields() {
        return DataFields.__super__.constructor.apply(this, arguments);
      }

      return DataFields;

    })(Backbone.Collection);
    DataConcepts = (function(_super) {

      __extends(DataConcepts, _super);

      DataConcepts.name = 'DataConcepts';

      function DataConcepts() {
        return DataConcepts.__super__.constructor.apply(this, arguments);
      }

      return DataConcepts;

    })(Backbone.Collection);
    DataContext = (function(_super) {

      __extends(DataContext, _super);

      DataContext.name = 'DataContext';

      function DataContext() {
        return DataContext.__super__.constructor.apply(this, arguments);
      }

      return DataContext;

    })(Backbone.Model);
    DataContexts = (function(_super) {

      __extends(DataContexts, _super);

      DataContexts.name = 'DataContexts';

      function DataContexts() {
        return DataContexts.__super__.constructor.apply(this, arguments);
      }

      return DataContexts;

    })(Backbone.Collection);
    return {
      DataFields: DataFields,
      DataConcepts: DataConcepts,
      Distributions: Distributions
    };
  });

}).call(this);
